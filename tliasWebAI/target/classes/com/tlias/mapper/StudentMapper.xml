<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tlias.mapper.StudentMapper">
    <insert id="add">
        INSERT INTO student (
            name,
            no,
            gender,
            phone,
            id_card,
            is_college,
            address,
            degree,
            graduation_date,
            clazz_id,
            violation_count,
            violation_score,
            create_time,
            update_time
        ) VALUES (
                     #{name},
                     #{no},
                     #{gender},
                     #{phone},
                     #{idCard},
                     #{isCollege},
                     #{address},
                     #{degree},
                     #{graduationDate},
                     #{clazzId},
                     0,0,
                     #{createTime},
                     #{updateTime}
                 )


    </insert>

    <update id="update">
        UPDATE student
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="no != null and no != ''">no = #{no},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="idCard != null and idCard != ''">id_card = #{idCard},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            <if test="degree != null">degree = #{degree},</if>
            <if test="graduationDate != null">graduation_date = #{graduationDate},</if>
            <if test="clazzId != null">clazz_id = #{clazzId},</if>
            <if test="violationCount != null">violation_count = #{violationCount},</if>
            <if test="violationScore != null">violation_score = #{violationScore},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateViolationScoreById">
        UPDATE student
        SET
            violation_score = violation_score + #{score},
            violation_count = violation_count + 1
        WHERE id = #{id}
    </update>
    <delete id="delete">
        delete from student where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectList" resultType="com.tlias.pojo.Student">
        select
        s.id,
        s.name,
        s.no,
        s.gender,
        s.phone,
        s.id_card AS idCard,
        s.address,
        s.degree,
        s.graduation_date AS graduationDate,
        s.clazz_id AS clazzId,
        c.name AS clazzName,
        s.violation_count AS violationCount,
        s.violation_score AS violationScore,
        s.create_time,
        s.update_time
        from student as s left join clazz as c on s.clazz_id = c.id
        <where>
            <if test="name != null and name != '' ">
                s.name like concat('%',#{name},'%')
            </if>
            <if test="degree != null and degree != null">
                and s.degree  = #{degree}
            </if>
            <if test="clazzId != null and clazzId != null">
                and s.clazz_id  = #{clazzId}
            </if>
        </where>
    </select>
    <select id="getInfo" resultType="com.tlias.pojo.Student">
        select
            s.id,
            s.name,
            s.no,
            s.gender,
            s.phone,
            s.id_card AS idCard,
            s.address,
            s.degree,
            s.graduation_date AS graduationDate,
            s.clazz_id AS clazzId,
            c.name AS clazzName,
            s.violation_count AS violationCount,
            s.violation_score AS violationScore,
            s.create_time,
            s.update_time
        from student as s 
        left join clazz as c on s.clazz_id = c.id
        where s.id = #{id}
        LIMIT 1
    </select>

        <select id="selectcountStudentData">
            SELECT
                (CASE clazz_id
                    WHEN 1 THEN 'JavaEE就业163期'
                    WHEN 2 THEN '前端就业90期'
                    WHEN 3 THEN 'JavaEE就业165期'
                    WHEN 4 THEN 'JavaEE就业166期'
                    WHEN 5 THEN '大数据就业58期'
                    WHEN 6 THEN 'JavaEE就业167期'
                    WHEN 13 THEN 'Python就业205期'
                    ELSE '其他'
                    END) AS clazz,
                COUNT(*) AS total
            FROM student
            GROUP BY clazz_id
            ORDER BY total DESC;
        </select>
    <select id="selectStudentDegreeData" resultType="java.util.Map">
        SELECT
            (CASE degree
                WHEN 1 THEN '初中'
                WHEN 2 THEN '高中'
                WHEN 3 THEN '大专'
                WHEN 4 THEN '本科'
                WHEN 5 THEN '硕士'
                WHEN 6 THEN '博士'
                ELSE '未知学历'
                END) AS name,
            COUNT(*) AS value
        FROM student
        GROUP BY degree
        ORDER BY degree;
    </select>
</mapper>